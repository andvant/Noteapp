<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <SolidColorBrush x:Key="AppBackgroundColor" Color="#eee" />
    <SolidColorBrush x:Key="ButtonColor" Color="#fff" />
    <SolidColorBrush x:Key="ButtonHoverColor" Color="#ccc" />
    <SolidColorBrush x:Key="ButtonPressedColor" Color="#bbb" />
    <SolidColorBrush x:Key="BorderColor" Color="#abadb3" />
    <SolidColorBrush x:Key="NoteHoverColor" Color="#eee" />
    <SolidColorBrush x:Key="NoteSelectedColor" Color="#1c77d4" />
    <SolidColorBrush x:Key="ActionMenuItemHoverColor" Color="#eee" />
    <SolidColorBrush x:Key="ActionMenuItemPressedColor" Color="#ddd" />
    <SolidColorBrush x:Key="NotePinnedFlagColor" Color="#2e97f2" />
    <SolidColorBrush x:Key="NoteLockedFlagColor" Color="#f6a200" />
    <SolidColorBrush x:Key="NoteArchivedFlagColor" Color="#989898" />
    <SolidColorBrush x:Key="NotePublishedFlagColor" Color="#de0231" />
    <SolidColorBrush x:Key="SynchronizingColor" Color="#555" />
    <SolidColorBrush x:Key="SynchronizedColor" Color="#4a4" />
    <SolidColorBrush x:Key="NotSynchronizedColor" Color="#e44" />

    <Style x:Key="BaseStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Cambria" />
    </Style>
    
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="18" />
    </Style>

    <Style x:Key="BigLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Margin" Value="0,20" />
    </Style>

    <Style x:Key="NoteFlag" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="0,0,3,0" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="22" />
    </Style>

    <Style x:Key="CredentialsInput" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Width" Value="420" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="0,20" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="Placeholder" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Cambria" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Foreground" Value="Gray" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <Style x:Key="SelectedNoteText" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="20,15" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Width"  Value="80" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource ButtonColor}" x:Name="Border" Padding="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPressedColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArchivedButtonPressed" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource ButtonHoverColor}" x:Name="Border" Padding="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPressedColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArchivedButtonNormal" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" />

    <Style x:Key="SyncStatusBaseStyle" TargetType="{x:Type TextBlock}" >
        <Setter Property="FontFamily" Value="Cambria" />
        <Setter Property="FontSize" Value="17" />
    </Style>
    <Style x:Key="SyncStatusSynchronizing" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource SyncStatusBaseStyle}">
        <Setter Property="Text" Value="Synchronizing..." />
        <Setter Property="Foreground" Value="{StaticResource SynchronizingColor}" />
    </Style>
    <Style x:Key="SyncStatusSynchronized" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource SyncStatusBaseStyle}">
        <Setter Property="Text" Value="All notes synchronized" />
        <Setter Property="Foreground" Value="{StaticResource SynchronizedColor}" />
    </Style>
    <Style x:Key="SyncStatusNotSynchronized" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource SyncStatusBaseStyle}">
        <Setter Property="Text" Value="Synchronization failed (changes saved locally)" />
        <Setter Property="Foreground" Value="{StaticResource NotSynchronizedColor}" />
    </Style>

    <Style x:Key="BigButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width"  Value="190" />
        <Setter Property="Height" Value="48" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Margin" Value="0,20" />
    </Style>

    <Style x:Key="ActionMenu" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <StackPanel Background="{StaticResource AppBackgroundColor}">
                        <ContentPresenter ContentSource="Header" x:Name="Menu"/>
                        <Popup x:Name="PART_Popup"
                            IsOpen="{TemplateBinding IsSubmenuOpen}" 
                            Placement="RelativePoint" VerticalOffset="55" HorizontalOffset="37">
                            <Border BorderThickness="1" BorderBrush="{StaticResource BorderColor}" Background="White">
                                <StackPanel Width="190">
                                    <ItemsPresenter />
                                </StackPanel>
                            </Border>
                        </Popup>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuIcon" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    
    <Style x:Key="ActionMenuItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Background="{StaticResource ButtonColor}" x:Name="Border" Padding="8">
                        <ContentPresenter VerticalAlignment="Center" ContentSource="Header" TextBlock.FontSize="17"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ActionMenuItemHoverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ActionMenuItemPressedColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border BorderThickness="0,0,0,1"
                            BorderBrush="{StaticResource BorderColor}"
                            Padding="{TemplateBinding Control.Padding}"
                            Background="{TemplateBinding Panel.Background}"
                            Name="Border"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource NoteHoverColor}"/>
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource NoteSelectedColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HistorySlider" TargetType="{x:Type Slider}">
        <Setter Property="Width" Value="500" />
        <Setter Property="TickPlacement" Value="BottomRight" />
        <Setter Property="TickFrequency" Value="1" />
        <Setter Property="IsSnapToTickEnabled" Value="True" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Margin" Value="0,10" />
    </Style>

</ResourceDictionary>