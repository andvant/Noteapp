<UserControl x:Class="Noteapp.Desktop.Views.NotesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Noteapp.Desktop.Views"
        xmlns:converters="clr-namespace:Noteapp.Desktop.Converters"
        xmlns:vm="clr-namespace:Noteapp.Desktop.ViewModels"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d">
    <UserControl.Resources>
        <converters:DateTimeToStringConverter x:Key="DateTimeConverter" />
        <converters:BoolToVisibilityConverter x:Key="VisibilityConverter" />
        <converters:ArchivedButtonStyleConverter x:Key="ArchivedButtonStyleConverter" />
    </UserControl.Resources>

    <DockPanel>
        <DockPanel DockPanel.Dock="Left" Width="340">
            <!--Note commands-->
            <Border BorderBrush="{StaticResource BorderColor}" BorderThickness="0,0,1,1" DockPanel.Dock="Top">
                <StackPanel Orientation="Horizontal" Height="60" HorizontalAlignment="Center">
                    <Button Content="Archived" Command="{Binding ToggleShowArchivedCommand}" Margin="12, 0"
                            Style="{Binding ShowArchived, Converter={StaticResource ArchivedButtonStyleConverter}}"/>
                    <Button Command="{Binding CreateCommand}" Content="+" Margin="12, 0"/>
                    <Button Command="{Binding ListCommand}" Content="List" Margin="12, 0"/>
                </StackPanel>
            </Border>

            <!--Sortings-->
            <Border BorderBrush="{StaticResource BorderColor}" BorderThickness="0,0,1,1" DockPanel.Dock="Top">
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Height="60" DockPanel.Dock="Top">
                    <Label Content="Sort by:" FontSize="16"/>
                    <Button Content="Created" Margin="4" Command="{Binding SortyByCreatedCommand}"/>
                    <Button Content="Updated" Margin="4" Command="{Binding SortyByUpdatedCommand}"/>
                    <Button Content="Text" Margin="4" Command="{Binding SortyByTextCommand}"/>
                </StackPanel>
            </Border>

            <!--Notes-->
            <ListBox ItemsSource="{Binding ShownNotes}" SelectedItem="{Binding SelectedNote}"
                     BorderThickness="0,0,1,0" BorderBrush="{StaticResource BorderColor}"
                     ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <ContentControl Height="80" Margin="6">
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Pinned" Background="{StaticResource NotePinnedFlagColor}"
                                           Style="{StaticResource NoteFlag}"
                                           Visibility="{Binding Pinned, Converter={StaticResource VisibilityConverter}}"/>

                                    <Label Content="Locked" Background="{StaticResource NoteLockedFlagColor}" 
                                           Style="{StaticResource NoteFlag}"
                                           Visibility="{Binding Locked, Converter={StaticResource VisibilityConverter}}"/>

                                    <Label Content="Archived" Background="{StaticResource NoteArchivedFlagColor}"
                                           Style="{StaticResource NoteFlag}"
                                           Visibility="{Binding Archived, Converter={StaticResource VisibilityConverter}}"/>

                                    <Label Content="Published" Background="{StaticResource NotePublishedFlagColor}"
                                           Style="{StaticResource NoteFlag}"
                                           Visibility="{Binding Published, Converter={StaticResource VisibilityConverter}}"/>
                                </StackPanel>
                                <TextBlock Text="{Binding TextPreview}" FontSize="17" FontWeight="Bold"/>
                                <TextBlock Text="{Binding UpdatedLocal, StringFormat=Updated: {0}, 
                                    Converter={StaticResource DateTimeConverter}}" FontSize="17"/>
                            </StackPanel>
                        </ContentControl>

                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
        
        <!--Selected note-->
        <DockPanel>
            <!--Note menu-->
            <Grid Height="60" DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="47" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Command="{Binding SaveCommand}" Content="Save" Style="{StaticResource SaveButton}"/>
                <Menu Grid.Column="1" Margin="0,10,10,0">
                    <MenuItem Style="{StaticResource ActionMenu}">
                        <MenuItem.Header>
                            <Image Source="/res/menu.png" Style="{StaticResource MenuIcon}"/>
                        </MenuItem.Header>
                        <MenuItem Header="Pin to top" Command="{Binding TogglePinnedCommand}" Style="{StaticResource ActionMenuItem}"/>
                        <MenuItem Header="Lock" Command="{Binding ToggleLockedCommand}" Style="{StaticResource ActionMenuItem}"/>
                        <MenuItem Header="Archive" Command="{Binding ToggleArchivedCommand}" Style="{StaticResource ActionMenuItem}"/>
                        <MenuItem Header="Publish" Command="{Binding TogglePublishedCommand}" Style="{StaticResource ActionMenuItem}"/>
                        <MenuItem Header="Copy Link" Command="{Binding CopyLinkCommand}" Style="{StaticResource ActionMenuItem}"/>
                        <MenuItem Header="Note history" Command="{Binding ShowHistoryCommand}" Style="{StaticResource ActionMenuItem}"/>
                        <MenuItem Header="Export" Command="{Binding ExportCommand}" Style="{StaticResource ActionMenuItem}"/>
                        <MenuItem Header="Import" Command="{Binding ImportCommand}" Style="{StaticResource ActionMenuItem}"/>
                        <MenuItem Header="Delete" Command="{Binding DeleteCommand}" Style="{StaticResource ActionMenuItem}"/>
                    </MenuItem>
                </Menu>
            </Grid>
            
            <!--Note history-->
            <Border BorderThickness="0,1,0,0" BorderBrush="{StaticResource BorderColor}" 
                    DockPanel.Dock="Bottom" Height="200"
                    Visibility="{Binding HistoryVisible, Converter={StaticResource VisibilityConverter}}">
                <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                    <Label Content="{Binding CurrentSnapshotDate, Converter={StaticResource DateTimeConverter}}"/>

                    <Slider Maximum="{Binding MaximumSnapshotIndex}" Value="{Binding CurrentSnapshotIndex}" 
                            Style="{StaticResource HistorySlider}"/>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Cancel" Command="{Binding CancelHistoryCommand}" Margin="5,0"/>
                        <Button Content="Restore" Command="{Binding RestoreSnapshotCommand}" Margin="5,0"/>
                    </StackPanel>
                </StackPanel>
            </Border>
            

            <!--Note text-->
            <Border BorderThickness="0,1,0,0" BorderBrush="{StaticResource BorderColor}"> 
                <TextBox Text="{Binding SelectedNote.Text, UpdateSourceTrigger=PropertyChanged}"
                         IsReadOnly="{Binding SelectedNote.Locked}" Style="{StaticResource SelectedNoteText}">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="TextChanged">
                            <behaviors:InvokeCommandAction Command="{Binding SaveAfterDelayCommand}" />
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                </TextBox>
            </Border>
            
        </DockPanel>
    </DockPanel>



</UserControl>
